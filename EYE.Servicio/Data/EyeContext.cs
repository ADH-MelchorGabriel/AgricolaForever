using EYE.Core.AcarreoCampo;
using EYE.Core.Reportes;
using EYE.Entidades;
using EYE.Reportes;
using EYE.Vistas;
using Microsoft.EntityFrameworkCore;
using System;
using System.Linq;

namespace EYE.Servicio.Data
{
    public class EyeContext : DbContext
    {
        public EyeContext(DbContextOptions<EyeContext> options) : base(options)
        {

        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {

            foreach (var relationship in modelBuilder.Model.GetEntityTypes().SelectMany(e => e.GetForeignKeys()))
            {
                relationship.DeleteBehavior = DeleteBehavior.Restrict;
            }

            modelBuilder.Entity<EmbarqueDetalleAgrupadoView>().HasNoKey();
            modelBuilder.Entity<EmbarqueDetalleFacturacionView>().HasNoKey();
            modelBuilder.Entity<EmbarqueDetalleGuiaView>().HasNoKey();
            modelBuilder.Entity<EmbarqueDetalleManifiestoView>().HasNoKey();
            modelBuilder.Entity<EmbarqueDetallePosicionView>().HasNoKey();
            modelBuilder.Entity<GuiasRpt>().HasNoKey();
            modelBuilder.Entity<EnviosRpt>().HasNoKey();

            modelBuilder.Entity<EmpaqueEntity>().HasData(new EmpaqueEntity { IdEmpaque = 1, Nombre = "Empaque principal", Codigo = "E1", EstaActivo = true });

            modelBuilder.Entity<AgricultorEntity>().HasData(new AgricultorEntity { IdAgricultor = 1, Nombre = "agricola forever young farms", Codigo = "AF", EstaActivo = true });
            modelBuilder.Entity<AgricultorEntity>().HasData(new AgricultorEntity { IdAgricultor = 2, Nombre = "AGRICOLA YOUNG 2", Codigo = "AA", EstaActivo = true });

            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 1, Nombre = "BERENJENA", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 2, Nombre = "BITTERMELON", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 3, Nombre = "EJOTE", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 4, Nombre = "CHILES", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 5, Nombre = "OPO", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 6, Nombre = "SINGUA", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 7, Nombre = "Calabazas", EstaActivo = true });
            modelBuilder.Entity<FamiliaCultivoEntity>().HasData(new FamiliaCultivoEntity { IdFamiliaCultivo = 8, Nombre = "MOQUA", EstaActivo = true });

            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 1, Nombre = "BERENJENA CHINA", IdFamiliaCultivo = 1, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 2, Nombre = "BERENJENA INDU", IdFamiliaCultivo = 1, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 3, Nombre = "BERENJENA FILIPINA", IdFamiliaCultivo = 1, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 4, Nombre = "BITTERMELON CHINO", IdFamiliaCultivo = 2, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 5, Nombre = "BITTERMELON INDU", IdFamiliaCultivo = 2, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 6, Nombre = "LONG BEAN", IdFamiliaCultivo = 3, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 7, Nombre = "THAI CHILE", IdFamiliaCultivo = 4, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 8, Nombre = "OPO", IdFamiliaCultivo = 5, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 9, Nombre = "SINGUA", IdFamiliaCultivo = 6, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 10, Nombre = "BELL PEPPER", IdFamiliaCultivo = 4, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 11, Nombre = "Calabaza kabocha", IdFamiliaCultivo = 7, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 12, Nombre = "BERENJENA THAY", IdFamiliaCultivo = 1, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 13, Nombre = "MOQUA", IdFamiliaCultivo = 8, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 14, Nombre = "Malla espuma", IdFamiliaCultivo = 1, EstaActivo = true });
            modelBuilder.Entity<CultivoEntity>().HasData(new CultivoEntity { IdCultivo = 15, Nombre = "GREEN BEANS", IdFamiliaCultivo = 3, EstaActivo = true });

            modelBuilder.Entity<EnvaseEntity>().HasData(new EnvaseEntity { IdEnvase = 1, Nombre = "CARTON", EstaActivo = true });
            modelBuilder.Entity<EnvaseEntity>().HasData(new EnvaseEntity { IdEnvase = 2, Nombre = "CAJA DE PLASTICO", EstaActivo = true });
            modelBuilder.Entity<EnvaseEntity>().HasData(new EnvaseEntity { IdEnvase = 3, Nombre = "Bolsas", EstaActivo = true });

            modelBuilder.Entity<LoteEntity>().HasData(new LoteEntity { IdLote = 1, Nombre = "Lote 1", Codigo = "UN", MunicipioProductor = "Navolato", UbicacionPredio = "", Sector = Enumeradores.SectorEnum.PequeñoPropietario, EstaActivo = true });
            modelBuilder.Entity<LoteEntity>().HasData(new LoteEntity { IdLote = 2, Nombre = "Lote 2", Codigo = "L2", MunicipioProductor = "Navolato", UbicacionPredio = "", Sector = Enumeradores.SectorEnum.PequeñoPropietario, EstaActivo = true });
            modelBuilder.Entity<LoteEntity>().HasData(new LoteEntity { IdLote = 3, Nombre = "El pozo", Codigo = "EP", MunicipioProductor = "Navolato", UbicacionPredio = "", Sector = Enumeradores.SectorEnum.PequeñoPropietario, EstaActivo = true });
            modelBuilder.Entity<LoteEntity>().HasData(new LoteEntity { IdLote = 4, Nombre = "El Aguacate", Codigo = "EA", MunicipioProductor = "Navolato", UbicacionPredio = "", Sector = Enumeradores.SectorEnum.PequeñoPropietario, EstaActivo = true });
            modelBuilder.Entity<LoteEntity>().HasData(new LoteEntity { IdLote = 5, Nombre = "El Ayale", Codigo = "EY", MunicipioProductor = "Navolato", UbicacionPredio = "", Sector = Enumeradores.SectorEnum.PequeñoPropietario, EstaActivo = true });
            modelBuilder.Entity<LoteEntity>().HasData(new LoteEntity { IdLote = 6, Nombre = "La piedra", Codigo = "LP", MunicipioProductor = "Navolato", UbicacionPredio = "", Sector = Enumeradores.SectorEnum.PequeñoPropietario, EstaActivo = true });

            modelBuilder.Entity<TamañoEntity>().HasData(new TamañoEntity { IdTamaño = 1, Nombre = "SMALL", EstaActivo = true });
            modelBuilder.Entity<TamañoEntity>().HasData(new TamañoEntity { IdTamaño = 2, Nombre = "MEDIUM", EstaActivo = true });
            modelBuilder.Entity<TamañoEntity>().HasData(new TamañoEntity { IdTamaño = 3, Nombre = "LARGE", EstaActivo = true });
            modelBuilder.Entity<TamañoEntity>().HasData(new TamañoEntity { IdTamaño = 4, Nombre = ".", EstaActivo = true });
            modelBuilder.Entity<TamañoEntity>().HasData(new TamañoEntity { IdTamaño = 5, Nombre = "LARGE AND MEDIUM", EstaActivo = true });

            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 1, Nombre = "BITTTERMELON CHINO LARGE", IdCultivo = 4, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "M1L", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 2, Nombre = "BITTER MELON CHINO MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "MPM", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 3, Nombre = "BITTERMELON CHINO small", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "M2L", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 4, Nombre = "BITTERMELON CHINO 2cc MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "MSM", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 5, Nombre = "BITTERMELON CHINO 2cc LARGE", IdCultivo = 4, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "I1L", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 6, Nombre = "BITTER MELON CHINO 2CC MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "I1M", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 8, Nombre = "BITTER MELON CHINO MEDIUM 2CP", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "I2M", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 9, Nombre = "BITTER MELON CHINO 2CP SMALL", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "OPS", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 10, Nombre = "BITTER MELON CHINO SMALL 2CC", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "OPM", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 37, Nombre = "BITTERMELON CHINO YOUNG SMALL", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "BCP", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 44, Nombre = "BITTERMELON CHINO YOUNG 2 SMALL", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "MCP", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 45, Nombre = "BITTERMELON CHINO YOUNG 2 MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "LCP", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 48, Nombre = "BITTERMELON CHINO segunda L", IdCultivo = 4, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CCP", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 49, Nombre = "BITTER MELON CHINO 2 MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "BMC", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 63, Nombre = "BITTERMELON CHINO YOUNG 2 LARGE", IdCultivo = 4, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FCO", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 64, Nombre = "BITTERMELON CHINO YOUNG LARGE", IdCultivo = 4, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CFC", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 65, Nombre = "BITTERMELON CHINO YOUNG MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "Bmf", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 78, Nombre = "BITTERMELON CHINO 2 SMALL", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "2BM", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 80, Nombre = "BITTER MELON CHINO LAR/MED ", IdCultivo = 4, IdTamaño = 5, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "LYM", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 81, Nombre = "BITTER MELON CHINO SMALL 1 1/2", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SMA", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 83, Nombre = "BITTER MELON CHINO LAR/MED 1-1/2", IdCultivo = 4, IdTamaño = 5, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "1/1", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 87, Nombre = "BITTER CHINO GENERICO M", IdCultivo = 4, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "GEN", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 98, Nombre = "BITTER MELON YOUNG  2SMALL ", IdCultivo = 4, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "GDF", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 13, Nombre = "OPO  MEDIUM  ", IdCultivo = 8, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "OSM", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 14, Nombre = "OPO SMALL", IdCultivo = 8, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "OSL", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 15, Nombre = "OPO MEDIUM 2CC", IdCultivo = 8, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "BI1", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 52, Nombre = "OPO SMALL 2CC", IdCultivo = 8, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "OCP", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 53, Nombre = "OPO LARGE 2CC", IdCultivo = 8, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "OMC", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 56, Nombre = "OPO LARGE CC ", IdCultivo = 8, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "OMP", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 92, Nombre = "OPO 2L EMP", IdCultivo = 8, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SDF", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 93, Nombre = "OPO 2M EMP", IdCultivo = 8, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "DFA", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 94, Nombre = "OPO 2 SMALL EMP", IdCultivo = 8, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SDR", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 95, Nombre = "OPO SMALL EMP", IdCultivo = 8, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "DES", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 96, Nombre = "OPO MEDIUM EMP", IdCultivo = 8, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "QWE", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 97, Nombre = "OPO LARGE EMP", IdCultivo = 8, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "RTY", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 40, Nombre = "BERENJENA INDU CP 40", IdCultivo = 2, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "BIP", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 16, Nombre = "BERENJENA CHINA LARGE", IdCultivo = 1, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CPL", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 17, Nombre = "BERENJENA CHINA  MEDIUM", IdCultivo = 1, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CPM", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 18, Nombre = "BERENJENA CHINA 2 LARGE", IdCultivo = 1, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "C2L", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 19, Nombre = "BERENJENA CHINA 1 -1/2 MEDIUM", IdCultivo = 1, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CSM", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 50, Nombre = "BERENJENA CHINA 2 SMALL ", IdCultivo = 1, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "BCS", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 62, Nombre = "BERENJENA CHINA M FCO", IdCultivo = 1, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "BCF", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 88, Nombre = "BERENJENA MEDIUM YOUNG", IdCultivo = 1, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "scd", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 89, Nombre = "BERENJENA LARGE YOUNG", IdCultivo = 1, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "ZVD", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 90, Nombre = "BERENJENA 2M YOUNG", IdCultivo = 1, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "DFW", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 91, Nombre = "BERENJENA 2L YOUNG", IdCultivo = 1, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "DFS", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 20, Nombre = "BERENJENA FILIPINA LARGE", IdCultivo = 3, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FPL", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 21, Nombre = "BERENJENA FILIPINA MEDIUM", IdCultivo = 3, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FPM", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 22, Nombre = "BERENJENA FILIPINA 2 LARGE", IdCultivo = 3, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FSL", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 23, Nombre = "BERENJENA FILIPINA 2 MEDIUM", IdCultivo = 3, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FSM", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 46, Nombre = "BERENJENA FILIPINA small", IdCultivo = 3, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FLC", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 66, Nombre = "BERENJENA FILIPINA L FCO", IdCultivo = 3, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FIL", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 24, Nombre = "LONG BEAN", IdCultivo = 6, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0708200100", CveProductoServicio = "50401847", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "LOB", Calidad = 0, FolioGuia = "186013", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 31, Nombre = "LONG BEAN PLASTICO", IdCultivo = 6, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0708200100", CveProductoServicio = "50401847", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "LBP", Calidad = 0, FolioGuia = "186013", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 25, Nombre = "SINGUA  LARGE", IdCultivo = 9, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "SPL", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 26, Nombre = "SINGUA MEDIUM ", IdCultivo = 9, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "SPM", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 29, Nombre = "SINGUA  SEGUNDA LARGE CP", IdCultivo = 9, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "SPP", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 79, Nombre = "SINGUA SEGUNDA MEDIUM CP", IdCultivo = 9, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "2SM", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 30, Nombre = "SINGUA SEGUNDA LARGE CC49", IdCultivo = 9, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SPC", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 32, Nombre = "SINGUA PRIMERA MEDIUM CC", IdCultivo = 9, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SMC", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 36, Nombre = "SINGUA large", IdCultivo = 9, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SMP", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 82, Nombre = "SINQUA SMALL CC", IdCultivo = 9, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50403901", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "SIN", Calidad = 0, FolioGuia = "186011", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 33, Nombre = "BITTER MELON INDU CP 40 ", IdCultivo = 5, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199999", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "ICP", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 35, Nombre = "BITTER MELON INDU CP", IdCultivo = 5, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199999", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "BIC", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 38, Nombre = "BERENJENA CHINA CP SEGUNDA MEDIUM", IdCultivo = 1, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "BCM", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 51, Nombre = "BERENJENA CHINA SMALL CP", IdCultivo = 1, IdTamaño = 1, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "BSP", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 7, Nombre = "BITTER MELON CHINO LARGE 2CP", IdCultivo = 4, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "I2L", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 11, Nombre = "BITTERMELON CHINO MEDIUM 2CP", IdCultivo = 4, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "OPL", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 12, Nombre = "BITTERMELON CHINO LARGE 2CP", IdCultivo = 4, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "OSS", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 39, Nombre = "BITTER MELON CHINO SEGUNDA MEDIUM CP", IdCultivo = 4, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "BM2", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 43, Nombre = "BITTERMELON CHINO MEDIANO SEGUNDA CP 56", IdCultivo = 4, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "B2P", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 58, Nombre = "BITTER MELON CHINO MEDIUM CP", IdCultivo = 4, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "CHI", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 59, Nombre = "BITTER MELON CHINO LARGE CP", IdCultivo = 4, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "C56", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 77, Nombre = "BITTERMELON CHINO 3-MEDIUM", IdCultivo = 4, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "3BM", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 84, Nombre = "BITTERMELON CHINO CP 2SMALL", IdCultivo = 4, IdTamaño = 1, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0807199901", CveProductoServicio = "50304600", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "HDS", Calidad = 0, FolioGuia = "186010", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 41, Nombre = "KABOCHA LARGE CC ", IdCultivo = 11, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930101", CveProductoServicio = "50406714", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "KCC", Calidad = 0, FolioGuia = "024003", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 42, Nombre = "KABOCHA MEDIUM C", IdCultivo = 11, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930101", CveProductoServicio = "50406714", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "KCM", Calidad = 0, FolioGuia = "024003", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 67, Nombre = "KABOCHA SMALL ", IdCultivo = 11, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930101", CveProductoServicio = "50406714", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "KSM", Calidad = 0, FolioGuia = "024003", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 68, Nombre = "KABOCHA SMALL A", IdCultivo = 11, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930101", CveProductoServicio = "50406714", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "KAB", Calidad = 0, FolioGuia = "024003", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 69, Nombre = "KABOCHA LARGE A", IdCultivo = 11, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930101", CveProductoServicio = "50406714", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "KAL", Calidad = 0, FolioGuia = "024003", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 70, Nombre = "KABOCHA MEDIUM A", IdCultivo = 11, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930101", CveProductoServicio = "50406714", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "KAM", Calidad = 0, FolioGuia = "024003", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 47, Nombre = "BERENJENA FILIPINA M CP", IdCultivo = 3, IdTamaño = 2, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "FCP", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 54, Nombre = "OPO LARGE CP", IdCultivo = 8, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 35, Codigo = "OLP", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 55, Nombre = "OPO SEGUNDA SMALL CP", IdCultivo = 8, IdTamaño = 1, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 40, Codigo = "SSP", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 57, Nombre = "OPO SEGUNDA LARGE CP", IdCultivo = 8, IdTamaño = 3, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0709999999", CveProductoServicio = "50407047", CveUnidadMedida = "XBX", Cantidad = 35, Codigo = "SLP", Calidad = 0, FolioGuia = "186012", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 61, Nombre = "BERENJENA INDU CC", IdCultivo = 2, IdTamaño = 4, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "ICC", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 60, Nombre = "BERENJENA THAY", IdCultivo = 12, IdTamaño = 4, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709300100", CveProductoServicio = "50403500", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "BTA", Calidad = 0, FolioGuia = "186037", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 27, Nombre = "CHILE THAI VERDE", IdCultivo = 7, IdTamaño = 4, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709609999", CveProductoServicio = "50405634", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CTV", Calidad = 0, FolioGuia = "186000", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 28, Nombre = "CHILE THAI ROJO", IdCultivo = 7, IdTamaño = 4, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709609999", CveProductoServicio = "50405634", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "CTR", Calidad = 0, FolioGuia = "186000", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 71, Nombre = "MOQUA (FUZZY SQUASH) MEDIUM", IdCultivo = 13, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930199", CveProductoServicio = "50403900", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FUZ", Calidad = 0, FolioGuia = "125019", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 72, Nombre = "MOQUA (FUZZY SQUASH) SMALL", IdCultivo = 13, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930199", CveProductoServicio = "50403900", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FUQ", Calidad = 0, FolioGuia = "125019", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 73, Nombre = " MOQUA (FUZZY SQUASH) 2 MEDIUM", IdCultivo = 13, IdTamaño = 2, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930199", CveProductoServicio = "50403900", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "QUA", Calidad = 0, FolioGuia = "125019", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 74, Nombre = "MOQUA (FUZZY SQUASH) 2 SMALL", IdCultivo = 13, IdTamaño = 1, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930199", CveProductoServicio = "50403900", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "ASH", Calidad = 0, FolioGuia = "125019", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 75, Nombre = " MOQUA (FUZZY SQUASH) 2 LARGE", IdCultivo = 13, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930199", CveProductoServicio = "50403900", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "ZZY", Calidad = 0, FolioGuia = "125019", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 85, Nombre = "MOQUA (FUZZY SQUASH) LARGE", IdCultivo = 13, IdTamaño = 3, IdEnvase = 1, PesoKg = 13.608, CveFraccionArancelaria = "0709930199", CveProductoServicio = "50403900", CveUnidadMedida = "XBX", Cantidad = 49, Codigo = "FLA", Calidad = 0, FolioGuia = "125019", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 76, Nombre = "Malla de espuma", IdCultivo = 14, IdTamaño = 4, IdEnvase = 3, PesoKg = 2.5, CveFraccionArancelaria = "3923909900", CveProductoServicio = "80141701", CveUnidadMedida = "XEC", Cantidad = 30, Codigo = "mll", Calidad = 0, FolioGuia = "000000", EstaActivo = true });
            modelBuilder.Entity<ProductoEntity>().HasData(new ProductoEntity { IdProducto = 86, Nombre = "GREEN BEANS", IdCultivo = 15, IdTamaño = 4, IdEnvase = 2, PesoKg = 13.608, CveFraccionArancelaria = "0708200100", CveProductoServicio = "50401847", CveUnidadMedida = "XBX", Cantidad = 56, Codigo = "GRE", Calidad = 0, FolioGuia = "186013", EstaActivo = true });

            modelBuilder.Entity<RolEntity>().HasData(new RolEntity { IdRol = 1, Nombre = "Administrador", EstaActivo = true });
            modelBuilder.Entity<UsuarioEntity>().HasData(new UsuarioEntity { IdUsuario = 1, Nombre = "Administrador", UserName = "Admin", Password = "10368.Z8huy4vYawZmWw5icpzOvw==.J3z5oZJporOFuTMBgSyPNZV2HUSmoBeokQwy1oCXa+U=", Correo = "", EstaActivo = true });
            modelBuilder.Entity<RolUsuarioEntity>().HasData(new RolUsuarioEntity { IdRolUsuario = 1, IdRol = 1, IdUsuario = 1, EstaActivo = true });

            modelBuilder.Entity<AgenciaAduanaEntity>().HasData(new AgenciaAduanaEntity { IdAgenciaAduana = 1, Nombre = "Saviñon y Suarez Brokerage, Company INC", EstaActivo = true });
            modelBuilder.Entity<AgenciaAduanaEntity>().HasData(new AgenciaAduanaEntity { IdAgenciaAduana = 2, Nombre = "RM S DE RL DE CV", EstaActivo = true });
            modelBuilder.Entity<AgenciaAduanaEntity>().HasData(new AgenciaAduanaEntity { IdAgenciaAduana = 3, Nombre = "Valverde y Suarez Brokerage, Company INC", EstaActivo = true });

            modelBuilder.Entity<LineaTransporteEntity>().HasData(new LineaTransporteEntity { IdLineaTransporte = 1, Nombre = "Juan Carlos Sanchez Siqueiros", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<LineaTransporteEntity>().HasData(new LineaTransporteEntity { IdLineaTransporte = 2, Nombre = "TRANSPORTES INTERNACIONALES JCV SA DE CV", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<LineaTransporteEntity>().HasData(new LineaTransporteEntity { IdLineaTransporte = 3, Nombre = "ALMA NUEMI PAYAN GASTELUM", Telefono = "", EstaActivo = true });

            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 1, IdLineaTransporte = 1, Nombre = "Javier Gaxiola Lopez", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 2, IdLineaTransporte = 1, Nombre = "Juan Pablo Sanchez Santiesteban", Telefono = ".", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 3, IdLineaTransporte = 1, Nombre = "ARNULFO MEDINA BAEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 4, IdLineaTransporte = 1, Nombre = "EDUARDO DUARTE VILLALOBOS", Telefono = "6371117331", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 5, IdLineaTransporte = 1, Nombre = "JORGE ALONSO CAMACHO GARCIA", Telefono = "6727238388", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 6, IdLineaTransporte = 1, Nombre = "JUAN CARLOS QUINTERO OLIVAS", Telefono = "6672150856", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 7, IdLineaTransporte = 1, Nombre = "JOEL FIGUEROA LOPEZ", Telefono = "6623152041", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 8, IdLineaTransporte = 1, Nombre = "Juan Carlos Sanchez Siqueiros", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 9, IdLineaTransporte = 2, Nombre = "JULIAN RODOLFO ALVARADO LUQUE", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 10, IdLineaTransporte = 2, Nombre = "ALEXIS IRIARTE FELIX", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 11, IdLineaTransporte = 2, Nombre = "JAIRO MOISES VALENZUELA LEON", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 12, IdLineaTransporte = 2, Nombre = "CAMARGO CONTRERAS MARTIN ALFREDO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 13, IdLineaTransporte = 2, Nombre = "FREDY GUERRERO GAMEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 14, IdLineaTransporte = 2, Nombre = "ROBERTO CARLOS MIRANDA GARCIA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 15, IdLineaTransporte = 2, Nombre = "ENRIQUE LEON MACIAS", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 16, IdLineaTransporte = 2, Nombre = "CASTILLO LOPEZ LUIS ALBERTO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 17, IdLineaTransporte = 2, Nombre = "MIGUEL ANGEL MARTINEZ CORDOVA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 18, IdLineaTransporte = 2, Nombre = "ALFREDO CAZARES GASTELUM", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 19, IdLineaTransporte = 2, Nombre = "HERNANDEZ QUIJANO SEVERIANO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 20, IdLineaTransporte = 2, Nombre = "JESUS ANTONIO GARFIO BENITEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 21, IdLineaTransporte = 2, Nombre = "SAUL URETA GARCIA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 22, IdLineaTransporte = 2, Nombre = "RAMIRO PERAZA PARDO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 23, IdLineaTransporte = 2, Nombre = "CUAHUTEMOC MIJAIL ALDANA PAYAN", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 24, IdLineaTransporte = 2, Nombre = "NAZARIO RAMON BERRELLEZA CARMONA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 25, IdLineaTransporte = 2, Nombre = "GILDARDO NAVARRETE ONTIVEROS", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 26, IdLineaTransporte = 2, Nombre = "GERARDO LOPEZ ROSARIO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 27, IdLineaTransporte = 2, Nombre = "HIPOLITO CORRALES VAZQUEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 28, IdLineaTransporte = 2, Nombre = "ALBERTO BURGOS AGUILAR", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 29, IdLineaTransporte = 2, Nombre = "JOSE GUADALUPE CALDERON RODELO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 30, IdLineaTransporte = 2, Nombre = "OSCAR MONTOYA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 31, IdLineaTransporte = 2, Nombre = "RAFAEL IRIARTE URIARTE", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 32, IdLineaTransporte = 2, Nombre = "EZEQUIEL CECEÑA BOJORQUEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 33, IdLineaTransporte = 2, Nombre = "JORGE VALENTIN GARCIA MONTES", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 34, IdLineaTransporte = 2, Nombre = "JESUS BENJAMIN LEON CEBREROS", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 35, IdLineaTransporte = 1, Nombre = "LUIS DONATO LEAL ALVAREZ", Telefono = "6441737642", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 36, IdLineaTransporte = 2, Nombre = "JOSE ALDRING BENITEZ REYES", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 37, IdLineaTransporte = 2, Nombre = "JOEL ENRIQUE PARRA CASTRO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 38, IdLineaTransporte = 2, Nombre = "ROSENDO TORRES PEREZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 39, IdLineaTransporte = 2, Nombre = "DAGOBERTO URIAS HERRERA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 40, IdLineaTransporte = 2, Nombre = "JESUS COTA VALENZUELA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 41, IdLineaTransporte = 2, Nombre = "EDEL ALBERTO CECEÑA ALCANTAR", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 42, IdLineaTransporte = 2, Nombre = "MARIO ALBERTO NARVAEZ ALVAREZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 43, IdLineaTransporte = 2, Nombre = "JOSE LUIS LOZOYA FLORES", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 44, IdLineaTransporte = 2, Nombre = "FELICIANO CHAPARRO PEÑA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 45, IdLineaTransporte = 2, Nombre = "VICTOR HUGO HERRERA GUTIERREZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 46, IdLineaTransporte = 2, Nombre = "JUAN CARLOS JUAREZ CRUZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 47, IdLineaTransporte = 2, Nombre = "Jaime Garcia Monterrubio", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 48, IdLineaTransporte = 2, Nombre = "JESUS ALONSO GASTELUM ROCHA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 49, IdLineaTransporte = 1, Nombre = "JESUS SANCHEZ VERDUGO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 50, IdLineaTransporte = 1, Nombre = "ERNESTO CAYETANO IBARRA FRAYRE", Telefono = "SIN0112161", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 51, IdLineaTransporte = 2, Nombre = "LUIS ENRIQUE MORAILA LLAMAS", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 52, IdLineaTransporte = 2, Nombre = "Jorge Aurelio Hernadez Valadez", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 53, IdLineaTransporte = 2, Nombre = "RICARDO JIMENEZ CHAVEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 54, IdLineaTransporte = 2, Nombre = "RAMON ERENESTO CARRAZCO HERRERA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 55, IdLineaTransporte = 2, Nombre = "SERGIO BALTAZAR SANCHEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 56, IdLineaTransporte = 2, Nombre = "JESUS MARTIN GARCIA VALENZUELA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 57, IdLineaTransporte = 2, Nombre = "JOSE RAMON GONZALEZ VALDIVIA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 58, IdLineaTransporte = 3, Nombre = "JESUS MARTIN AGUILAR DOMINGUEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 59, IdLineaTransporte = 2, Nombre = "ROBERTO URIAS GUTIERREZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 60, IdLineaTransporte = 2, Nombre = "JOSE RAMON COTA FIGUEROA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 61, IdLineaTransporte = 2, Nombre = "OSCAR DAVID CHAVEZ CALDERON", Telefono = "687 366 4401", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 62, IdLineaTransporte = 2, Nombre = "RODOLFO JOAQUIN URREA CARLOS", Telefono = "6311732494", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 63, IdLineaTransporte = 2, Nombre = "JESUS ERNESTO SANCHEZ LOPEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 64, IdLineaTransporte = 2, Nombre = "ARIEL ORLANDO RAMOS CARDENAS", Telefono = "6674132749", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 65, IdLineaTransporte = 2, Nombre = "SANCHEZ CRUZ JUAN CARLOS", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 66, IdLineaTransporte = 2, Nombre = "OSCAR ANTONIO CHAVEZ LOPEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 67, IdLineaTransporte = 2, Nombre = "VICTOR MANUEL ACOSTA APODACA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 68, IdLineaTransporte = 2, Nombre = "AMILCAR INZUNZA ESCALANTE", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 69, IdLineaTransporte = 2, Nombre = "HUGO OMAR RAMIREZ GALAVIZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 70, IdLineaTransporte = 2, Nombre = "JOSE ALFREDO MEDALLO QUINTANA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 71, IdLineaTransporte = 2, Nombre = "IVAN FLORES AHUMADA", Telefono = "6674021236", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 72, IdLineaTransporte = 2, Nombre = "FAUSTO JAVIER VALDES URIAS", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 73, IdLineaTransporte = 2, Nombre = "FORTINO VALENZUELA GARDEA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 74, IdLineaTransporte = 1, Nombre = "LUIS ADOLFO SANCHEZ GUTIERREZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 75, IdLineaTransporte = 1, Nombre = "ADRIAN BARRAZA ROBLEDO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 76, IdLineaTransporte = 1, Nombre = "LUIS ADOLFO SANCHEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 77, IdLineaTransporte = 1, Nombre = "LUIS ARMANDO ARENAS CAZAREZ", Telefono = "6674821990", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 78, IdLineaTransporte = 1, Nombre = "FELIPE MALVERDE", Telefono = "4152150972", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 79, IdLineaTransporte = 3, Nombre = "CRISANTO MEDINA MEDINA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 80, IdLineaTransporte = 1, Nombre = "JOSE JAVIER LEYVA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 81, IdLineaTransporte = 3, Nombre = "LUIS SALAZAR LOPEZ", Telefono = "6672075957", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 82, IdLineaTransporte = 1, Nombre = "NOEL SANCHEZ COSIO", Telefono = "6131070727", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 83, IdLineaTransporte = 3, Nombre = "SERGIO ABEL URETA MERCADO", Telefono = "6721206111", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 84, IdLineaTransporte = 3, Nombre = "JUAN DE DIOS SANCHEZ IBARRA", Telefono = "6673179967", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 85, IdLineaTransporte = 3, Nombre = "JUAN CARLOS CASTAÑO HERNANDEZ", Telefono = "6671623622", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 86, IdLineaTransporte = 3, Nombre = "CRISTINO LOPEZ DEL REAL", Telefono = "6675138076", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 87, IdLineaTransporte = 1, Nombre = "JESUS NAVITIVAD MORALES QUEVEDO", Telefono = "4442003435", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 88, IdLineaTransporte = 1, Nombre = "AXEL SANCHEZ IBARRA", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 89, IdLineaTransporte = 1, Nombre = "HUGO GASTELUM QUIÑONEZ CARRO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 90, IdLineaTransporte = 1, Nombre = "JESUS IVAN ANGULO VALDEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 91, IdLineaTransporte = 3, Nombre = "JUAN CARLOS CASTAÑOS HERNANDEZ", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 92, IdLineaTransporte = 3, Nombre = "ARTURO ATIENZO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 93, IdLineaTransporte = 1, Nombre = "ALFONSO FIERRO ARCE", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 94, IdLineaTransporte = 3, Nombre = "AGAPITO CERVANTES", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 95, IdLineaTransporte = 3, Nombre = "OSWALDO CARDENAS BRIGAN", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 96, IdLineaTransporte = 3, Nombre = "LUIS MIGUEL CASTRO BELTRAN", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 97, IdLineaTransporte = 3, Nombre = "Jose Alfredo RuiZ Lopez", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 98, IdLineaTransporte = 3, Nombre = "JORGE FRANCO", Telefono = "", EstaActivo = true });
            modelBuilder.Entity<ChoferEntity>().HasData(new ChoferEntity { IdChofer = 99, IdLineaTransporte = 1, Nombre = "CESAR ERNESTO GONZALES CASILLAS", Telefono = "", EstaActivo = true });


            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 1, IdLineaTransporte = 1, Descripcion = "International Dorado", Año = 2000, Placas = "091AP8", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 2, IdLineaTransporte = 1, Descripcion = "Freightliner Verde", Año = 1996, Placas = "951DV4", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 3, IdLineaTransporte = 1, Descripcion = "Freightliner BLANCO", Año = 2003, Placas = "40AE4G", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 4, IdLineaTransporte = 1, Descripcion = "International BLANCO----", Año = 2002, Placas = "680DV7", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 5, IdLineaTransporte = 1, Descripcion = "International BLANCO NUEVO", Año = 2010, Placas = "70AM4X", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 6, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "79AD3A", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 7, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2015, Placas = "332DV4", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 8, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "44AR3G", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 9, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "48AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 10, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "19AK2C", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 11, IdLineaTransporte = 2, Descripcion = "Freightliner CREMA", Año = 2018, Placas = "97AF4M", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 12, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "36AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 13, IdLineaTransporte = 2, Descripcion = "Freightliner GRIS", Año = 2018, Placas = "37AF6M", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 14, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2015, Placas = "66AA2N", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 15, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "23AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 16, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "43AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 17, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2015, Placas = "98AE3A", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 18, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "83AK1C", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 19, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2015, Placas = "878EY6", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 20, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "31AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 21, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "44AL6E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 22, IdLineaTransporte = 2, Descripcion = "Freightliner CREMA", Año = 2018, Placas = "72AR3G", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 23, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "80AK5R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 24, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "31AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 25, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "44AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 26, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "52AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 27, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "24AK2C", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 28, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "59AK5R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 29, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "80AB9M", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 30, IdLineaTransporte = 2, Descripcion = "Freightliner GRIS", Año = 2018, Placas = "84AG2K", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 31, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "08AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 32, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2015, Placas = "21AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 33, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "42AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 34, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2017, Placas = "59AE4A", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 35, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "85AC9H", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 36, IdLineaTransporte = 2, Descripcion = "Freightliner GRIS", Año = 2018, Placas = "83AG2K", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 37, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "81AB9M", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 38, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2015, Placas = "839EY6", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 39, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2016, Placas = "51AH6F", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 40, IdLineaTransporte = 2, Descripcion = "Freightliner CREMA", Año = 2018, Placas = "90AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 41, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "39AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 42, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "55AK5R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 43, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2015, Placas = "818EY6", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 44, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "40AM2G", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 45, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "28AC1J", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 46, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "21AK2C", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 47, IdLineaTransporte = 1, Descripcion = "KENWORTH ROJO", Año = 1977, Placas = "97IDV9", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 48, IdLineaTransporte = 1, Descripcion = "KENWORTH BLANCO", Año = 1999, Placas = "297DV9", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 49, IdLineaTransporte = 2, Descripcion = "Freightliner CREMA", Año = 2018, Placas = "87AF4M", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 50, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "90AB1N", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 51, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2015, Placas = "826EY6", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 52, IdLineaTransporte = 2, Descripcion = "Freightliner BLANCO", Año = 2015, Placas = "824EY6", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 53, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "33AC1J", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 54, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2019, Placas = "99AH9N", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 55, IdLineaTransporte = 3, Descripcion = "KENWORTH LILA", Año = 2012, Placas = "590DV9", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 56, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "19AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 57, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2015, Placas = "334DV4", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 58, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "22AK2C", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 59, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "45AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 60, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "98AB7K", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 61, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "18AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 62, IdLineaTransporte = 2, Descripcion = "Freightliner GRIS", Año = 2018, Placas = "88AG2K", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 63, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "30AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 64, IdLineaTransporte = 2, Descripcion = "KENWORTH BLANCO", Año = 2021, Placas = "11AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 65, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2016, Placas = "63AR3E", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 66, IdLineaTransporte = 2, Descripcion = "Freightliner GRIS", Año = 2018, Placas = "03AS7A", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 67, IdLineaTransporte = 2, Descripcion = "VOLVO BLANCO", Año = 2015, Placas = "340DV4", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 68, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "54AK5R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 69, IdLineaTransporte = 2, Descripcion = "International BLANCO", Año = 2020, Placas = "35AK6R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 70, IdLineaTransporte = 2, Descripcion = "GENERICOS BLANC", Año = 2023, Placas = "C234380", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 71, IdLineaTransporte = 1, Descripcion = "International NEGRO", Año = 2011, Placas = "12AS1W", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 72, IdLineaTransporte = 1, Descripcion = "Freightliner BLANCO", Año = 2001, Placas = "19AE2G", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 73, IdLineaTransporte = 3, Descripcion = "KENWORTH BLANCO", Año = 2020, Placas = "09AM3X", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 74, IdLineaTransporte = 1, Descripcion = "KENWORTH AZUL", Año = 1980, Placas = "880AM9", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 75, IdLineaTransporte = 3, Descripcion = "KENWORTH NEGRO", Año = 2007, Placas = "754DW1", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 76, IdLineaTransporte = 3, Descripcion = "KENWORTH ROJO", Año = 2019, Placas = "31AJ9P", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 77, IdLineaTransporte = 3, Descripcion = "KENWORTH AZUL", Año = 2013, Placas = "488AP8", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 78, IdLineaTransporte = 3, Descripcion = "KENWORTH ANARANJADO", Año = 2016, Placas = "59AT8P", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 79, IdLineaTransporte = 3, Descripcion = "KENWORTH VERDE", Año = 2013, Placas = "953DV9", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 80, IdLineaTransporte = 1, Descripcion = "VOLVO BLANCO", Año = 2012, Placas = "64AT5R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 81, IdLineaTransporte = 1, Descripcion = "DINA AMARILLO", Año = 1972, Placas = "470DW1", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 82, IdLineaTransporte = 1, Descripcion = "Freightliner ROJO", Año = 2020, Placas = "851AR2", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 83, IdLineaTransporte = 3, Descripcion = "International LILA", Año = 2008, Placas = "73AM4X", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 84, IdLineaTransporte = 1, Descripcion = "International BLANCO", Año = 2010, Placas = "81AT4R", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 85, IdLineaTransporte = 3, Descripcion = "KENWORTH AMARILLO", Año = 2000, Placas = "28AC8H", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 86, IdLineaTransporte = 3, Descripcion = "KENWORTH blanco", Año = 2020, Placas = "583DB8", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 87, IdLineaTransporte = 3, Descripcion = "KENWORTH anaranjado", Año = 2018, Placas = "59-AT-8P", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 88, IdLineaTransporte = 3, Descripcion = "KENWORTH ROJO", Año = 2017, Placas = "536DW2", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 89, IdLineaTransporte = 3, Descripcion = "KENWORTH BLANCO", Año = 2010, Placas = "56AC711", Apodo = "", EstaActivo = true });
            modelBuilder.Entity<VehiculoEntity>().HasData(new VehiculoEntity { IdVehiculo = 90, IdLineaTransporte = 3, Descripcion = "KENWORTH BLANCO", Año = 0, Placas = "20-AC-8H", Apodo = "", EstaActivo = true });

            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 1, IdLineaTransporte = 1, Descripcion = "JP09 512WS5", Año = 2006, Placas = "512WS5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 2, IdLineaTransporte = 1, Descripcion = "JP05   25-UA-6C", Año = 1996, Placas = "25UA6C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 3, IdLineaTransporte = 1, Descripcion = "JP08   974WS5", Año = 1998, Placas = "974WS5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 4, IdLineaTransporte = 1, Descripcion = "JP01 28UE5G", Año = 1996, Placas = "28UE5G", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 5, IdLineaTransporte = 1, Descripcion = "JP04 266 WB 2", Año = 2000, Placas = "266 WB 2", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 6, IdLineaTransporte = 1, Descripcion = "JP10-088-UB-5", Año = 2000, Placas = "088-UB-5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 7, IdLineaTransporte = 1, Descripcion = "JP06 12UA6C", Año = 2000, Placas = "12UA6C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 8, IdLineaTransporte = 2, Descripcion = "MH-1386", Año = 2017, Placas = "46UA9Y", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 9, IdLineaTransporte = 2, Descripcion = "MH-1215", Año = 2016, Placas = "B644920", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 10, IdLineaTransporte = 2, Descripcion = "MH 1423", Año = 2018, Placas = "B818074", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 11, IdLineaTransporte = 2, Descripcion = "MH-1269", Año = 2017, Placas = "64UA8F", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 12, IdLineaTransporte = 2, Descripcion = "MH-1620", Año = 2020, Placas = "50UJ6L", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 13, IdLineaTransporte = 2, Descripcion = "MH-1109", Año = 2014, Placas = "C180627", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 14, IdLineaTransporte = 2, Descripcion = "MH-1607", Año = 2021, Placas = "54UF1M", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 15, IdLineaTransporte = 2, Descripcion = "MH-1288", Año = 2017, Placas = "15TZ2V", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 16, IdLineaTransporte = 2, Descripcion = "MH-1264", Año = 2017, Placas = "68UA8F", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 17, IdLineaTransporte = 2, Descripcion = "MH-1665", Año = 2022, Placas = "C156922", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 18, IdLineaTransporte = 2, Descripcion = "MH-1192", Año = 2016, Placas = "    163XA3", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 19, IdLineaTransporte = 2, Descripcion = "MH-1637", Año = 2020, Placas = "60UJ6L", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 20, IdLineaTransporte = 2, Descripcion = "MH-1600", Año = 2021, Placas = "47UF1M", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 21, IdLineaTransporte = 2, Descripcion = "MH-1299", Año = 2017, Placas = " 685WM7", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 22, IdLineaTransporte = 2, Descripcion = "MH-1613", Año = 2020, Placas = "53UJ6L", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 23, IdLineaTransporte = 2, Descripcion = "MH-1302", Año = 2017, Placas = "31UA7D", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 24, IdLineaTransporte = 2, Descripcion = "MH-1422", Año = 2018, Placas = "B818073", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 25, IdLineaTransporte = 2, Descripcion = "MH-983", Año = 2013, Placas = "B435730", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 26, IdLineaTransporte = 2, Descripcion = "MH-1214", Año = 2016, Placas = "B644919", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 27, IdLineaTransporte = 2, Descripcion = "MH1453", Año = 2018, Placas = "2087864", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 28, IdLineaTransporte = 2, Descripcion = "MH-1205", Año = 2016, Placas = "B644910", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 29, IdLineaTransporte = 2, Descripcion = "MH-1219", Año = 2016, Placas = "B644924", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 30, IdLineaTransporte = 2, Descripcion = "MH-1100", Año = 2016, Placas = "C180618", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 31, IdLineaTransporte = 2, Descripcion = "MH-1659", Año = 2022, Placas = "C156916", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 32, IdLineaTransporte = 2, Descripcion = "MH-947", Año = 2013, Placas = "B385294", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 33, IdLineaTransporte = 2, Descripcion = "MH-1098", Año = 2015, Placas = "C180616", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 34, IdLineaTransporte = 2, Descripcion = "MH-1681", Año = 2022, Placas = "C203923", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 35, IdLineaTransporte = 2, Descripcion = "MH-1388", Año = 2020, Placas = "B766219", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 36, IdLineaTransporte = 2, Descripcion = "MH-1411", Año = 2018, Placas = "B818062", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 37, IdLineaTransporte = 2, Descripcion = "MH-1235", Año = 2017, Placas = "B663539", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 38, IdLineaTransporte = 1, Descripcion = "JP-13", Año = 2015, Placas = "73UK9M", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 39, IdLineaTransporte = 2, Descripcion = "MH-1605", Año = 2021, Placas = "B998688", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 40, IdLineaTransporte = 2, Descripcion = "MH-1602", Año = 2021, Placas = "B998685", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 41, IdLineaTransporte = 2, Descripcion = "MH-1252", Año = 2017, Placas = "B663556", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 42, IdLineaTransporte = 2, Descripcion = "MH-1666", Año = 2022, Placas = "C156923", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 43, IdLineaTransporte = 2, Descripcion = "MH-1387", Año = 2017, Placas = "60UA9Y", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 44, IdLineaTransporte = 2, Descripcion = "MH-1231", Año = 2017, Placas = "B663535", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 45, IdLineaTransporte = 2, Descripcion = "MH-1393", Año = 2017, Placas = "62UA2R", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 46, IdLineaTransporte = 2, Descripcion = "MH-1199", Año = 2016, Placas = "B644904", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 47, IdLineaTransporte = 2, Descripcion = "MH-1638", Año = 2020, Placas = "258464E", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 48, IdLineaTransporte = 2, Descripcion = "MH-1432", Año = 2018, Placas = "B818083", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 49, IdLineaTransporte = 2, Descripcion = "MH-1448", Año = 2018, Placas = "B818099", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 50, IdLineaTransporte = 2, Descripcion = "MH-1689", Año = 2022, Placas = "C203931", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 51, IdLineaTransporte = 2, Descripcion = "MH-1686", Año = 2022, Placas = "C203928", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 52, IdLineaTransporte = 2, Descripcion = "MH-1382", Año = 2017, Placas = "B766216", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 53, IdLineaTransporte = 2, Descripcion = "MH-1402", Año = 2018, Placas = "B818053", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 54, IdLineaTransporte = 2, Descripcion = "MH-1710", Año = 2022, Placas = "C203952", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 55, IdLineaTransporte = 2, Descripcion = "MH-1260", Año = 2017, Placas = "B714870", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 56, IdLineaTransporte = 2, Descripcion = "MH-1608", Año = 2021, Placas = "B998751", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 57, IdLineaTransporte = 1, Descripcion = "JP06", Año = 2022, Placas = "12-UA6-C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 58, IdLineaTransporte = 1, Descripcion = "ZAR22", Año = 1999, Placas = "35UA3C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 59, IdLineaTransporte = 2, Descripcion = "MH-1698", Año = 2022, Placas = "C203940", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 60, IdLineaTransporte = 2, Descripcion = "MH-1644", Año = 2020, Placas = "25-8466E", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 61, IdLineaTransporte = 2, Descripcion = "MH-1670", Año = 2022, Placas = "C156927", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 62, IdLineaTransporte = 2, Descripcion = "MH-1080", Año = 2015, Placas = "B575308", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 63, IdLineaTransporte = 2, Descripcion = "MH-1437", Año = 2018, Placas = "B818088", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 64, IdLineaTransporte = 2, Descripcion = "MH-1071", Año = 2015, Placas = "B571160", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 65, IdLineaTransporte = 2, Descripcion = "MH-1621", Año = 2020, Placas = "49UJ6L", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 66, IdLineaTransporte = 2, Descripcion = "MH-1073", Año = 2015, Placas = "B575303", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 67, IdLineaTransporte = 2, Descripcion = "MH-1674", Año = 2022, Placas = "C156931", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 68, IdLineaTransporte = 2, Descripcion = "MH-1445", Año = 2018, Placas = "B818096", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 69, IdLineaTransporte = 3, Descripcion = "EP-12", Año = 2015, Placas = "86UE7Z", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 70, IdLineaTransporte = 2, Descripcion = "MH-1190", Año = 2016, Placas = "35TX2S", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 71, IdLineaTransporte = 2, Descripcion = "MH-1706", Año = 2022, Placas = "C203948", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 72, IdLineaTransporte = 2, Descripcion = "MH-1403", Año = 2018, Placas = "B818054", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 73, IdLineaTransporte = 2, Descripcion = "MH-1218", Año = 2016, Placas = "B644923", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 74, IdLineaTransporte = 2, Descripcion = "MH-1037", Año = 2008, Placas = "B647230", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 75, IdLineaTransporte = 2, Descripcion = "MH-1301", Año = 2017, Placas = "B743152", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 76, IdLineaTransporte = 2, Descripcion = "MH-1447", Año = 2018, Placas = "B818098", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 77, IdLineaTransporte = 2, Descripcion = "MH-1278", Año = 2017, Placas = "B714888", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 78, IdLineaTransporte = 2, Descripcion = "REASA-61", Año = 2012, Placas = "671WS5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 79, IdLineaTransporte = 2, Descripcion = "MH-1732", Año = 2023, Placas = "C234384", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 80, IdLineaTransporte = 2, Descripcion = "MH-1433", Año = 2018, Placas = "B818084", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 81, IdLineaTransporte = 2, Descripcion = "MH-1405", Año = 2018, Placas = "B818056", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 82, IdLineaTransporte = 2, Descripcion = "MH-1406", Año = 2018, Placas = "B818057", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 83, IdLineaTransporte = 2, Descripcion = "MH-1606", Año = 2021, Placas = "C183926", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 84, IdLineaTransporte = 2, Descripcion = "MH-1435", Año = 2018, Placas = "B818086", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 85, IdLineaTransporte = 2, Descripcion = "MH-1740", Año = 2023, Placas = "C234392", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 86, IdLineaTransporte = 2, Descripcion = "MH-1238", Año = 2017, Placas = "B663542", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 87, IdLineaTransporte = 2, Descripcion = "MH-1691", Año = 2022, Placas = "C203933", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 88, IdLineaTransporte = 2, Descripcion = "MH-1399", Año = 2017, Placas = "B780651", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 89, IdLineaTransporte = 2, Descripcion = "MH-1656", Año = 2022, Placas = "C156913", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 90, IdLineaTransporte = 2, Descripcion = "MH-1305", Año = 2017, Placas = "B743156", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 91, IdLineaTransporte = 2, Descripcion = "MH-1394", Año = 2020, Placas = "47UA9Y", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 92, IdLineaTransporte = 2, Descripcion = "JCV-668", Año = 2020, Placas = "47AK6R", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 93, IdLineaTransporte = 2, Descripcion = "MH-1622", Año = 2020, Placas = "25-8452E", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 94, IdLineaTransporte = 2, Descripcion = "MH-1395", Año = 2020, Placas = "57UA9Y", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 95, IdLineaTransporte = 1, Descripcion = "JP14", Año = 2020, Placas = "61UK7R", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 96, IdLineaTransporte = 3, Descripcion = "EP23", Año = 2000, Placas = "747UK4", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 97, IdLineaTransporte = 3, Descripcion = "EP323", Año = 2000, Placas = "498WB1", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 98, IdLineaTransporte = 1, Descripcion = "JP03", Año = 1984, Placas = "091-AP-8", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 99, IdLineaTransporte = 1, Descripcion = "JP07", Año = 1995, Placas = "921WS5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 100, IdLineaTransporte = 3, Descripcion = "EP-19 50UE8T", Año = 2015, Placas = "50UE8T", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 101, IdLineaTransporte = 3, Descripcion = "EP2 399WL5", Año = 2005, Placas = "399WL5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 102, IdLineaTransporte = 3, Descripcion = "EP302- 449WS5", Año = 2006, Placas = "449WS5", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 103, IdLineaTransporte = 3, Descripcion = "EP20-813WL4", Año = 2013, Placas = "813WL4", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 104, IdLineaTransporte = 3, Descripcion = "EP320-511WB1", Año = 2000, Placas = "511WB1", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 105, IdLineaTransporte = 3, Descripcion = "EP06 30UA3C", Año = 2020, Placas = "30UA3C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 106, IdLineaTransporte = 3, Descripcion = "EP21-39-UE-8Z", Año = 2020, Placas = "39-UE-8Z", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 107, IdLineaTransporte = 1, Descripcion = "SL01 -45UK9M", Año = 2020, Placas = "45UK9M", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 108, IdLineaTransporte = 3, Descripcion = "70UA3C EP-16", Año = 2012, Placas = "70UA3C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 109, IdLineaTransporte = 1, Descripcion = "JG -21 43UA4C", Año = 2020, Placas = "43UA4C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 110, IdLineaTransporte = 3, Descripcion = "EP-03", Año = 2000, Placas = "20UP9R", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 111, IdLineaTransporte = 3, Descripcion = "EP-01", Año = 2000, Placas = "29UA3C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 112, IdLineaTransporte = 3, Descripcion = "EP -13", Año = 2020, Placas = "21-UG-9K", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 113, IdLineaTransporte = 3, Descripcion = "EP-10", Año = 2000, Placas = "69-UA-3C", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 114, IdLineaTransporte = 3, Descripcion = "EP-7", Año = 2000, Placas = "748UK4", EstaActivo = true });
            modelBuilder.Entity<RemolqueEntity>().HasData(new RemolqueEntity { IdRemolque = 115, IdLineaTransporte = 3, Descripcion = "EP-11", Año = 2000, Placas = "28-up-1s", EstaActivo = true });

            modelBuilder.Entity<TemporadaEntity>().HasData(new TemporadaEntity { IdTemporada = 1, Descripcion = "2020-2021", FechaInicio = DateTime.Parse("2020-11-01"), FechaFinal = DateTime.Parse("2021-07-30"), EstaActivo = true });
            modelBuilder.Entity<TemporadaEntity>().HasData(new TemporadaEntity { IdTemporada = 2, Descripcion = "2021-2022", FechaInicio = DateTime.Parse("2021-11-01"), FechaFinal = DateTime.Parse("2022-07-01"), EstaActivo = true });
            modelBuilder.Entity<TemporadaEntity>().HasData(new TemporadaEntity { IdTemporada = 3, Descripcion = "20202-2023", FechaInicio = DateTime.Parse("2022-11-01"), FechaFinal = DateTime.Parse("2023-07-01"), EstaActivo = true });
            modelBuilder.Entity<TemporadaEntity>().HasData(new TemporadaEntity { IdTemporada = 4, Descripcion = "2023-2024", FechaInicio = DateTime.Parse("2023-11-01"), FechaFinal = DateTime.Parse("2024-07-01"), EstaActivo = true });


        }

        public DbSet<EmpaqueEntity> Empaques { get; set; }
        public DbSet<LoteEntity> Lotes { get; set; }
        public DbSet<ClaveCatastralEntity> ClaveCatastrales { get; set; }
        public DbSet<TamañoEntity> Tamaño { get; set; }
        public DbSet<EnvaseEntity> Envases { get; set; }
        public DbSet<FamiliaCultivoEntity> FamiliaCultivos { get; set; }
        public DbSet<CultivoEntity> Cultivos { get; set; }
        public DbSet<ProductoEntity> Productos { get; set; }
        public DbSet<AgricultorEntity> Agricultores { get; set; }
        public DbSet<TemporadaEntity> Temporadas { get; set; }
        public DbSet<LineaTransporteEntity> LineaTransportes { get; set; }
        public DbSet<RemolqueEntity> Remolques { get; set; }
        public DbSet<ChoferEntity> Choferes { get; set; }
        public DbSet<VehiculoEntity> Vehiculos { get; set; }
        public DbSet<DestinoEntity> Destinos { get; set; }
        public DbSet<ClienteEntity> Clientes { get; set; }
        public DbSet<AgenciaAduanaEntity> AgenciaAduanas { get; set; }
        public DbSet<PaletEntity> Palet { get; set; }
        public DbSet<PaletDetalleEntity> PaletDetalle { get; set; }
        public DbSet<EmbarqueEntity> Embarque { get; set; }
        public DbSet<EmbarqueDetalleEntity> EmbarqueDetalle { get; set; }
        public DbSet<UsuarioEntity> Usuario { get; set; }
        public DbSet<RolEntity> Rol { get; set; }
        public DbSet<RolUsuarioEntity> RolUsuario { get; set; }
        public DbSet<EmpresaEntity> Empresa { get; set; }
        public DbSet<EmbarqueDetalleAgrupadoView> EmbarqueDetalleAgrupadoView { get; set; }
        public DbSet<EmbarqueDetalleFacturacionView> EmbarqueDetalleFacturacionView { get; set; }
        public DbSet<EmbarqueDetalleGuiaView> EmbarqueDetalleGuiaView { get; set; }
        public DbSet<EmbarqueDetalleManifiestoView> EmbarqueDetalleManifiestoView { get; set; }
        public DbSet<EmbarqueDetallePosicionView> EmbarqueDetallePosicionView { get; set; }
        public DbSet<TipoCambioEntity> TiposCambios { get; set; }
        public DbSet<BancoEntity> Bancos { set; get; }
        public DbSet<GuiasRpt> GuiasRpt { set; get; }
        public DbSet<EnviosRpt> EnviosRpt { set; get; }


        public DbSet<AcarreoCampoEntity> AcarreoCampo { set; get; }

        public DbSet<ArticuloEntity> Articulos { set; get; }
        public DbSet<EntradaEntity> Entrada { set; get; }
        public DbSet<EntradaDetalleEntity> EntradaDetalle { set; get; }

    }
}
